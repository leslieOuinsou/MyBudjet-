import Notification from '../models/notification.js';

/**
 * G√©n√©rateur de notifications automatiques
 */

// Cr√©er une notification pour alerte budg√©taire (80% atteint)
export const createBudgetAlertNotification = async (userId, budgetName, percentage, remaining) => {
  try {
    await Notification.create({
      user: userId,
      type: 'budget_alert',
      title: `Alerte budg√©taire`,
      message: `Votre budget ${budgetName} a atteint ${percentage}%. Il vous reste ${remaining}‚Ç¨ pour ce mois.`,
      priority: 'high',
      data: {
        budgetName,
        percentage,
        remaining
      }
    });
    console.log(`‚ö†Ô∏è  Notification d'alerte budg√©taire cr√©√©e pour ${budgetName}`);
  } catch (error) {
    console.error('Erreur lors de la cr√©ation de notification:', error);
  }
};

// Cr√©er une notification pour budget d√©pass√©
export const createBudgetExceededNotification = async (userId, budgetName, amount) => {
  try {
    await Notification.create({
      user: userId,
      type: 'budget_exceeded',
      title: `Budget d√©pass√© !`,
      message: `Attention ! Votre budget ${budgetName} a √©t√© d√©pass√© de ${amount}‚Ç¨.`,
      priority: 'high',
      data: {
        budgetName,
        exceeded: amount
      }
    });
    console.log(`üö® Notification de d√©passement budg√©taire cr√©√©e pour ${budgetName}`);
  } catch (error) {
    console.error('Erreur lors de la cr√©ation de notification:', error);
  }
};

// Cr√©er une notification pour nouvelle transaction
export const createTransactionNotification = async (userId, amount, category, description) => {
  try {
    await Notification.create({
      user: userId,
      type: 'transaction_reminder',
      title: `Nouvelle transaction`,
      message: `Transaction de ${amount}‚Ç¨ ajout√©e dans ${category}${description ? `: ${description}` : ''}.`,
      priority: 'medium',
      data: {
        amount,
        category,
        description
      }
    });
    console.log(`üí≥ Notification de transaction cr√©√©e: ${amount}‚Ç¨`);
  } catch (error) {
    console.error('Erreur lors de la cr√©ation de notification:', error);
  }
};

// Cr√©er une notification pour objectif atteint
export const createGoalAchievedNotification = async (userId, goalName, amount) => {
  try {
    await Notification.create({
      user: userId,
      type: 'goal_achieved',
      title: `Objectif atteint ! üéâ`,
      message: `F√©licitations ! Vous avez atteint votre objectif "${goalName}" de ${amount}‚Ç¨.`,
      priority: 'high',
      data: {
        goalName,
        amount
      }
    });
    console.log(`üéØ Notification d'objectif atteint cr√©√©e: ${goalName}`);
  } catch (error) {
    console.error('Erreur lors de la cr√©ation de notification:', error);
  }
};

// Cr√©er une notification syst√®me
export const createSystemNotification = async (userId, title, message) => {
  try {
    await Notification.create({
      user: userId,
      type: 'system',
      title,
      message,
      priority: 'medium'
    });
    console.log(`‚ÑπÔ∏è  Notification syst√®me cr√©√©e`);
  } catch (error) {
    console.error('Erreur lors de la cr√©ation de notification:', error);
  }
};

// Notification de bienvenue pour nouveaux utilisateurs
export const createWelcomeNotification = async (userId, userName) => {
  try {
    await Notification.create({
      user: userId,
      type: 'system',
      title: `Bienvenue ${userName} ! üëã`,
      message: `Nous sommes ravis de vous accueillir sur MyBudget+. Commencez par cr√©er votre premier budget !`,
      priority: 'medium'
    });
    console.log(`üëã Notification de bienvenue cr√©√©e pour ${userName}`);
  } catch (error) {
    console.error('Erreur lors de la cr√©ation de notification:', error);
  }
};

// Notification hebdomadaire de r√©sum√©
export const createWeeklySummaryNotification = async (userId, totalSpent, totalIncome, savingsRate) => {
  try {
    await Notification.create({
      user: userId,
      type: 'weekly',
      title: `R√©sum√© hebdomadaire üìä`,
      message: `Cette semaine : ${totalSpent}‚Ç¨ d√©pens√©s, ${totalIncome}‚Ç¨ de revenus. Taux d'√©pargne : ${savingsRate}%.`,
      priority: 'low',
      data: {
        totalSpent,
        totalIncome,
        savingsRate
      }
    });
    console.log(`üìä Notification de r√©sum√© hebdomadaire cr√©√©e`);
  } catch (error) {
    console.error('Erreur lors de la cr√©ation de notification:', error);
  }
};

export default {
  createBudgetAlertNotification,
  createBudgetExceededNotification,
  createTransactionNotification,
  createGoalAchievedNotification,
  createSystemNotification,
  createWelcomeNotification,
  createWeeklySummaryNotification
};

